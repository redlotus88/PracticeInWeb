<?xml version="1.0" encoding="UTF-8"?>

<web-app version="3.1" xmlns="http://xmlns.jcp.org/xml/ns/javaee"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd">
    <display-name>WEB-XML DISPLAY NAME</display-name>

    <!-- Spring 指定上下文配置文件 -->  
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            classpath*:/config/spring/applicationContext-core.xml,
            classpath*:/config/shiro/applicationContext-shiro.xml,
        </param-value>
    </context-param>
    
    <!-- log4j 配置 -->
    <context-param>
        <param-name>log4jConfigLocation</param-name>
        <param-value>classpath:/config/log4j.properties</param-value>
    </context-param>
    
     <!-- 设定刷新日志配置文件的时间间隔，这里设置为10s -->
    <context-param>
        <param-name>log4jRefreshInterval</param-name>
        <param-value>10000</param-value>
    </context-param>
    
    <!-- 为避免项目间冲突，定义唯一的 webAppRootKey. Log4j会使用 -->
    <context-param>
        <param-name>webAppRootKey</param-name>
        <param-value>scheduleProject</param-value>
    </context-param>
    <!-- log4j 配置end -->
    
    <!-- spring监听器，监听springMvc环境 -->  
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <!-- 加载Spring框架中的log4j监听器Log4jConfigListener -->
    <listener>
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
    </listener>
    <!-- Apache Tiles 3 监听器 -->
    <listener>
	    <listener-class>org.apache.tiles.extras.complete.CompleteAutoloadTilesListener</listener-class>
	</listener>
    
     <!-- 压入项目路径 -->  
    <listener>  
       <listener-class>org.springframework.web.util.WebAppRootListener</listener-class>  
    </listener>  
    
    <filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    
    <!-- 配置Shiro过滤器,先让Shiro过滤系统接收到的请求 -->
    <!-- 通常将这段代码中的filter-mapping放在所有filter-mapping之前，以达到shiro是第一个对web请求进行拦截过滤之目的。 
        这里的fileter-name(shiroFilter) 对应下面applicationContext.xml中的<bean id="shiroFilter" 
        /> DelegatingFilterProxy会自动到Spring容器中查找名字为shiroFilter的bean并把filter请求交给它处理 -->
    <!-- 使用[/*]匹配所有请求,保证所有的可控请求都经过Shiro的过滤 -->
    <filter>
        <filter-name>shiroFilter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
        <init-param>
            <!-- 该值缺省为false,表示生命周期由SpringApplicationContext管理,设置为true则表示由ServletContainer管理 -->
            <param-name>targetFilterLifecycle</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>shiroFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>  
    
    <servlet>
        <servlet-name>SpringMVC</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>WEB-INF/config/springmvc/SpringMVC-servlet.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    
    <servlet-mapping>
        <servlet-name>SpringMVC</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>
    
    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>
    
    
    <error-page>
        <exception-type>java.lang.Throwable</exception-type>
        <location>/WEB-INF/view/error.jsp</location>
    </error-page>
    <error-page>
        <error-code>400</error-code>
        <location>/WEB-INF/view/error.jsp</location>
    </error-page>
    <!-- 404 页面不存在错误 -->
    <error-page>
        <error-code>404</error-code>
        <location>/static/error/error.html</location>
    </error-page>
   <!-- 500 服务器内部错误 -->
    <error-page>
        <error-code>500</error-code>
        <location>/WEB-INF/view/error.jsp</location>
    </error-page> 
</web-app>
